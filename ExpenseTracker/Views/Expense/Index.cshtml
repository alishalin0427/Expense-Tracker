@using X.PagedList.Mvc.Core
@using X.PagedList
@model IPagedList<ExpenseTracker.Models.Expense>
@{
    ViewData["Title"] = "Index";
}

<h2 class="title">支出列表</h2>
<a asp-action="Search" class="btn btn-info">
    <i class="fas fa-search"></i> 查詢支出
</a>
<div class="flex-container">
    <div class="table-container">
        <table class="table">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.First().Description)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.First().Amount)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.First().Category)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.First().Date)
                    </th>
                    <th>
                    </th>
                </tr>
            </thead>
            <tbody>
                @if (Model != null && Model.Any())
                {
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Description)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Amount)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Category)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Date)
                            </td>
                            <td>
                                <div class="btn-group me-2" role="group" aria-label="First group">
                                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-outline-secondary">編輯</a>
                                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-outline-secondary">內容</a>
                                    <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-outline-danger">刪除</a>
                                </div>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="5" class="text-center">沒有資料</td>
                    </tr>
                }
            </tbody>
        </table>

        @if (Model != null && Model.PageCount > 0)
        {
            <div class="pagination-info">
                <span class="text-muted">
                    第 @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) 頁，共 @Model.PageCount 頁。
                    每頁 @Model.PageSize 筆資料，全部共有 @Model.TotalItemCount 筆資料。
                </span>
            </div>

            @if (Model.PageCount > 1)
            {
                <div class="pagination-container">
                    <nav aria-label="Page navigation">
                        <ul class="pagination justify-content-center">
                            @if (Model.HasPreviousPage)
                            {
                                <li class="page-item">
                                    <a class="page-link" href="@Url.Action("Index", new { page = 1 })">第一頁</a>
                                </li>
                                <li class="page-item">
                                    <a class="page-link" href="@Url.Action("Index", new { page = Model.PageNumber - 1 })">上一頁</a>
                                </li>
                            }

                            @for (int i = Math.Max(1, Model.PageNumber - 2); i <= Math.Min(Model.PageCount, Model.PageNumber + 2); i++)
                            {
                                <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                                    <a class="page-link" href="@Url.Action("Index", new { page = i })">@i</a>
                                </li>
                            }

                            @if (Model.HasNextPage)
                            {
                                <li class="page-item">
                                    <a class="page-link" href="@Url.Action("Index", new { page = Model.PageNumber + 1 })">下一頁</a>
                                </li>
                                <li class="page-item">
                                    <a class="page-link" href="@Url.Action("Index", new { page = Model.PageCount })">最後一頁</a>
                                </li>
                            }
                        </ul>
                    </nav>
                </div>
            }
        }
    </div>

    <div class="chart-container">
        <div style="width: 300px; height: 300px;">
            <canvas id="expensePieChart"></canvas>
        </div>
    </div>
</div>

<a asp-action="Create" class="btn btn-danger fixed-add-btn">
    <span class="btn-icon">+</span>
    <span class="btn-text">新增</span>
</a>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    fetch('/Expense/GetChart')
      .then(res => res.json())
      .then(data => {
        const ctx = document.getElementById('expensePieChart').getContext('2d');
        new Chart(ctx, {
          type: 'pie',
          data: {
            labels: data.map(x => x.category),
            datasets: [{
              data: data.map(x => x.totalAmount),
              backgroundColor: ['#ff6384', '#36a2eb', '#ffce56','#fca049','#fc4949','#b6faf3','#beb6fa','#fcc2ee','#cafcc2','#fcfab6','#298534']
            }]
          },
          options: {
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
              legend: { position: 'bottom' }
            }
          }
        });
      });
</script>

<style>
    .title {
        text-align: center;
    }

    .alert {
        border-radius: 10px;
        border: none;
        padding: 15px;
        margin-bottom: 20px;
    }

    .alert-success {
        background-color: #d4edda;
        color: #155724;
    }

    .alert-danger {
        background-color: #f8d7da;
        color: #721c24;
    }

    .alert-info {
        background-color: #d1ecf1;
        color: #0c5460;
    }

    .flex-container {
        display: flex;
        align-items: flex-start;
        width: 100%;
        min-height: 200px;
        flex-direction: row;
    }

    .table-container {
        flex: 1 80%;
        max-width: 80%;
        padding-right: 1px;
        box-sizing: border-box;
    }

    .chart-container {
        flex: 1 50%;
        max-width: 100%;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: flex-start;
    }

    .table {
        width: 100%;
        margin-left: 0 !important;
    }

    button {
        margin: 25px 5px 20px 20px;
    }

    .e-plus-icon::before {
        content: '\e823';
    }

    th {
        text-align: center;
    }

    td {
        text-align: center;
    }

    .fixed-add-btn {
        position: fixed;
        bottom: 20px;
        right: 20px;
        z-index: 1000;
        border-radius: 50px;
        padding: 15px 20px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
        font-weight: bold;
        text-decoration: none;
        transition: all 0.3s ease;
        overflow: hidden;
        white-space: nowrap;
        min-width: 50px;
        text-align: center;
        justify-content: center;
    }

    .btn-icon {
        display: inline-block;
        font-size: 18px;
        transition: all 0.3s ease;
        line-height: 1;
    }

    .btn-text {
        display: inline-block;
        max-width: 0;
        overflow: hidden;
        opacity: 0;
        margin-left: 0;
        transition: all 0.3s ease;
        white-space: nowrap;
        line-height: 1;
        font-size: 16px;
        vertical-align: middle;
    }

    .fixed-add-btn:hover .btn-text {
        max-width: 50px;
        opacity: 1;
        margin-left: 8px;
    }

    .fixed-add-btn:hover {
        transform: translateY(1px);
        box-shadow: 0 6px 20px rgba(0, 0, 0, 0.2);
        text-decoration: none;
        padding: 15px 25px;
        min-width: 90px;
    }

    /* 分頁相關樣式 */
    .pagination-info {
        margin: 15px 0;
        text-align: center;
        font-size: 14px;
    }

    .pagination-container {
        margin: 20px 0;
        text-align: center;
    }

    .pagination {
        display: inline-flex;
        padding-left: 0;
        list-style: none;
        border-radius: 0.25rem;
    }

    .page-item {
        margin: 0 2px;
    }

    .page-link {
        position: relative;
        display: block;
        padding: 0.5rem 0.75rem;
        margin-left: -1px;
        line-height: 1.25;
        color: #007bff;
        text-decoration: none;
        background-color: #fff;
        border: 1px solid #dee2e6;
        border-radius: 0.25rem;
        transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out;
    }

        .page-link:hover {
            z-index: 2;
            color: #0056b3;
            text-decoration: none;
            background-color: #e9ecef;
            border-color: #dee2e6;
        }

    .page-item.active .page-link {
        z-index: 3;
        color: #fff;
        background-color: #007bff;
        border-color: #007bff;
    }

    .page-item.disabled .page-link {
        color: #6c757d;
        pointer-events: none;
        cursor: auto;
        background-color: #fff;
        border-color: #dee2e6;
    }
</style>